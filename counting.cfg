// HOW TO USE THE CONFIG FILE:
// When workspace_preparer is called, it will create a config_reader
// to read this file.  It will create all variables with "m a k e :" in 
// front of them (whether or not they occur at the beginning of the line,
// which is why i put spaces between the letters above.  Otherwise, the
// program would think the rest of this is a variable!
//
// It will create them simply by stripping m a k e : and ; out of the
// string, and running the workspace->factory() method on what's left.
//
// Instead of using m a k e : and ; as the delimiters, other values
// can be chosen... just modify the config_reader.C.  However, there is
// no forseeable good reason to do this.  So please don't, unless you
// have a need.
//
// The "d o u b l e :" line is used to draw values out of the config
// file as doubles.  The razor variable lower and upper limits are set
// in this way.


// Create the parameter of interest.
// The bounds and central value may be changed.
make:sigma[.001,0,2];

// Create the luminosity, and the associated pdf.
// The luminosity is lumi_bar * pow(1 + err, prime_lumi), where
// lumi_bar is the expected luminosity and err determines how much
// it can vary.  Feel free to change these two values.
make:Gaussian::lumi_pdf(prime_lumi[0,-5,5], nom_lumi[0,-5,5], 1);
make:expr::lumi('1500*pow(1.01,@0)',prime_lumi);

// Create the efficiency, and the associated pdf.
// The efficiency is eff_bar * pow(1 + err, prime_eff), where
// eff_bar is the expected efficiency and err determines how much
// it can vary.  Feel free to change these two values.
make:Gaussian::eff_pdf(prime_eff[0, -5, 5], nom_eff[0, -5, 5], 1);
make:expr::eff('.02* pow(1.01, @0)', prime_eff);


// Create the transfer factor, and the associated pdf.
// The transfer factor is rho_bar * pow(1 + err, prime_rho), where
// rho_bar is the expected transfer factor and err determines how much
// it can vary.  Feel free to change these two values.
make:Gaussian::rho_pdf(prime_rho[0, -5, 5], nom_rho[0, -5, 5], 1);
make:expr::rho('1* pow(1.01, @0)', prime_rho);

// S and B are the values by which the pdfs will be extended.  See 
// workspace_preparer for how this is done.
make:expr::S('@0*@1*@2', lumi, sigma, eff);
make:expr::B('@0*@1', prime_bprime, rho);

// Declarations of the bounds of the razor variables.  Feel free to change.
double:MR_lower2;
double:MR_upper4;
double:RR_lower2;
double:RR_upper4;
